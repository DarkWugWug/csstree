{
    "<angle>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<angle>"
            }
        },
        "valid": [
            "1deg",
            "1DEG",
            "1grad",
            "1GRAD",
            "1rad",
            "1RAD",
            "1turn",
            "1TURN",
            "calc(2 * 1deg)",
            "0"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2deg"
        ]
    },
    "<time>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<time>"
            }
        },
        "valid": [
            "1s",
            "1S",
            "1ms",
            "1MS",
            "calc(2 * 1s)"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2s"
        ]
    },
    "<length>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<length>"
            }
        },
        "valid": [
            "1px",
            "1PX",
            "1mm",
            "1MM",
            "1cm",
            "1CM",
            "1in",
            "1IN",
            "1pt",
            "1PT",
            "1pc",
            "1PC",
            "1em",
            "1EM",
            "1ex",
            "1EX",
            "1ch",
            "1CH",
            "1rem",
            "1REM",
            "1vh",
            "1VH",
            "1vw",
            "1VW",
            "1vmin",
            "1VMIN",
            "1vmax",
            "1VMAX",
            "1vm",
            "1VM",
            "0",
            "-0",
            "0.0",
            "calc(2 * 1px)"
        ],
        "invalid": [
            "",
            "1s",
            "1s 2px"
        ]
    },
    "<frequency>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<frequency>"
            }
        },
        "valid": [
            "1hz",
            "1Hz",
            "1khz",
            "1kHz",
            "calc(2 * 1hz)"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2hz"
        ]
    },
    "<resolution>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<resolution>"
            }
        },
        "valid": [
            "1dpi",
            "1DPI",
            "1dpcm",
            "1DPCM",
            "1dppx",
            "1DPPX",
            "calc(2 * 1dpi)"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2dpi"
        ]
    },
    "<flex>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<flex>"
            }
        },
        "valid": [
            "1fr",
            "1FR",
            "calc(2 * 1fr)"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2fr"
        ]
    },
    "<decibel>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<decibel>"
            }
        },
        "valid": [
            "1db",
            "1dB",
            "calc(2 * 1db)"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2db"
        ]
    },
    "<semitones>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<semitones>"
            }
        },
        "valid": [
            "1st",
            "1ST",
            "calc(2 * 1st)"
        ],
        "invalid": [
            "",
            "1px",
            "1px 2st"
        ]
    },
    "<dimension>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<dimension>"
            }
        },
        "valid": [
            "1px",
            "1something"
        ],
        "invalid": [
            "",
            "1 2px"
        ]
    },
    "<percentage>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<percentage>"
            }
        },
        "valid": [
            "1%",
            "12.34%",
            "calc(2 * 1%)"
        ],
        "invalid": [
            "",
            "1 2%",
            "1px"
        ]
    },
    "<zero>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<zero>"
            }
        },
        "valid": [
            "0",
            ".0",
            "0.0",
            "0.000"
        ],
        "invalid": [
            "",
            "123",
            "0.123",
            "123.123"
        ]
    },
    "<number>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<number>"
            }
        },
        "valid": [
            "123",
            "123.456",
            ".456",
            "calc(2 * 1.5)"
        ],
        "invalid": [
            "",
            "foo 123"
        ]
    },
    "<number-zero-one>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<number-zero-one>"
            }
        },
        "valid": [
            "0",
            ".0",
            "0.0",
            ".456",
            "1.0",
            "1"
        ],
        "invalid": [
            "-1",
            "1.01",
            "123"
        ]
    },
    "<number-one-or-greater>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<number-one-or-greater>"
            }
        },
        "valid": [
            "1",
            "1.0",
            "123.456"
        ],
        "invalid": [
            "-1",
            "0.01",
            ".999",
            "abc"
        ]
    },
    "<integer>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<integer>"
            }
        },
        "valid": [
            "123",
            "-123",
            "calc(2 * 2)"
        ],
        "invalid": [
            "",
            "123.456",
            "-123.456",
            ".456",
            "foo 123"
        ]
    },
    "<positive-integer>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<positive-integer>"
            }
        },
        "valid": [
            "123",
            "calc(2 * 2)"
        ],
        "invalid": [
            "",
            "-123",
            "123.456",
            "-123.456",
            ".456",
            "foo 123"
        ]
    },
    "<hex-color>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<hex-color>"
            }
        },
        "valid": [
            "#abc",
            "#abcd",
            "#abcdef",
            "#123456",
            "#aBcDeF",
            "#abcdef12"
        ],
        "invalid": [
            "",
            "#a",
            "#ab",
            "#abz",
            "#abcde",
            "#abcdez",
            "#abcdef1",
            "#abcdef1z",
            "#abcdef123",
            "123 #abc123"
        ]
    },
    "<id-selector>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "element( <id-selector> )"
            }
        },
        "valid": [
            "element(#foo)",
            "element(#a123)",
            "element(#foo-123)",
            "element(#--foo)"
        ],
        "invalid": [
            "element(#123)",
            "element(#)"
        ]
    },
    "<ident>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<ident>"
            }
        },
        "valid": [
            "foo",
            "-foo",
            "--foo",
            "--",
            "---",
            "foo-bar",
            "-foo-bar",
            "--foo-bar"
        ],
        "invalid": [
            "",
            "123 foo"
        ]
    },
    "<string>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<string>"
            }
        },
        "valid": [
            "\"string\"",
            "'string'"
        ],
        "invalid": [
            "",
            "1 'string'"
        ]
    },
    "<url>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<url>"
            }
        },
        "valid": [
            "url(\"string\")",
            "URL(\"string\")",
            "url('string')",
            "URL('string')",
            "url(raw)",
            "URL(raw)"
        ],
        "invalid": [
            "",
            "1 url('string')"
        ]
    },
    "<attr()>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<attr()>"
            }
        },
        "valid": [
            "attr(foo)",
            "ATTR(foo)"
        ],
        "invalid": [
            "",
            "1 attr(foo)"
        ]
    },
    "<unicode-range>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<unicode-range>"
            }
        },
        "valid": [
            "U+26",
            "U+0-7F",
            "u+0025-00FF",
            "U+0025-00FF",
            "U+4??",
            "U+0F00",
            "U+0F00-0FFF",
            "U+FF00-FF10",
            "U+1234-2345",
            "U+1234-abcd",
            "U+0-7F",
            "u+0f00??",
            "u+12e-130",
            "u+?"
        ],
        "invalid": [
            "",
            "U",
            "u",
            "u234",
            "foo",
            "U+",
            "u+12-",
            "U+-123",
            "u+123????",
            "u+1234567",
            "u+123456-123???",
            "u+123456-1234567",
            "u+123456z",
            "u+123456z",
            "u+123456-123456z",
            "u+.200",
            "u+12-.34",
            "u+12-3e-4",
            "u+12-3e+4",
            "u+12e+12",
            "u+0.200"
        ]
    },
    "<custom-ident>": {
        "comment": "use additional <length> term since on mismatch it will try to match on CSS common pattern and will be success",
        "syntax": {
            "generic": true,
            "properties": {
                "test": "test( <custom-ident> )"
            }
        },
        "valid": [
            "test( foo )",
            "test( bar123 )"
        ],
        "invalid": [
            "test( )",
            "test( inherit )",
            "test( initial )",
            "test( unset )",
            "test( default )",
            "test( 0 )"
        ]
    },
    "<declaration-value>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "test( <declaration-value> )"
            }
        },
        "skipped": {
            "comment": "such values can't be parsed currently",
            "valid": [
                "test( foo(!) )",
                "test( foo(;) )",
                "test( ([{}]) )"
            ]
        },
        "valid": [
            "test( foo )",
            "test( 123px )"
        ],
        "invalid": [
            "test(  )",
            "test( foo 'asd\n )",
            "test( foo url(( )",
            "test( foo!important )",
            "test( foo;123 )",
            "test( ) )",
            "test( ] )",
            "test( } )",
            "test( (]) )",
            "test( (}) )",
            "test( [)] )"
        ]
    },
    "<any-value>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "test( <any-value> )"
            }
        },
        "skipped": {
            "valid": [
                "test( foo(!) )",
                "test( foo(;) )",
                "test( ([{}]) )"
            ]
        },
        "valid": [
            "test( foo )",
            "test( 123px )",
            "test( foo!important )",
            "test( foo;123 )"
        ],
        "invalid": [
            "test( )",
            "test( 'asd\n )",
            "test( foo 'asd\n )",
            "test( foo url(( )",
            "test( ) )",
            "test( ] )",
            "test( } )",
            "test( (]) )",
            "test( (}) )",
            "test( [)] )"
        ]
    },
    "<-ms-legacy-expression>": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<-ms-legacy-expression>"
            }
        },
        "valid": [
            "expression(...)",
            "EXPRESSION(...)"
        ],
        "invalid": [
            "expression",
            "foo()"
        ]
    },
    "calc": {
        "syntax": {
            "generic": true,
            "properties": {
                "test": "<length>"
            }
        },
        "valid": [
            "calc(1px + 1%)",
            "CALC(1px + 1%)",
            "-moz-calc(1px + 1%)",
            "-MOZ-CALC(1px + 1%)",
            "-webkit-calc(1px + 1%)",
            "-WEBKIT-CALC(1px + 1%)"
        ],
        "invalid": [
            "-ms-calc(1px + 1%)",
            "-o-calc(1px + 1%)"
        ]
    }
}
